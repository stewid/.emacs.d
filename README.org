* Configuration

** Personal Information

#+BEGIN_SRC emacs-lisp
  (setq user-full-name "Stefan Widgren"
        user-mail-address "stefan.widgren@gmail.com")
#+END_SRC

** Minibuffer

#+begin_src emacs-lisp
  (use-package vertico
    :defer t
    :config
    (setq vertico-cycle t)
    (setq vertico-resize nil)
    (vertico-mode 1))
#+end_src

#+begin_src emacs-lisp
  (use-package marginalia
    :ensure t
    :config
    (marginalia-mode 1))
#+end_src

#+begin_src emacs-lisp
  (use-package orderless
    :ensure t
    :config
    (setq completion-styles '(orderless basic)))
#+end_src

** Use short answers

[[https://www.masteringemacs.org/article/disabling-prompts-emacs][Replace the 'yes or no' prompt with 'y or n'.]]

#+BEGIN_SRC emacs-lisp
  (setopt use-short-answers t)
#+END_SRC

** Theme

Use the [[https://protesilaos.com/assets/images/modus/modus-operandi-code.png][light theme]] =modus-operandi=. It is distributed with Emacs
starting with version 28.1, which makes it easy to use on various
systems without having to install any extra packages.

#+BEGIN_SRC emacs-lisp
  (load-theme 'modus-operandi t)
#+END_SRC

** Delete trailing space

#+BEGIN_SRC emacs-lisp
  (add-hook 'before-save-hook 'delete-trailing-whitespace)
#+END_SRC

** Magit

#+BEGIN_SRC emacs-lisp
(use-package magit
  :defer t
  :ensure t
  :bind ("C-x g" . magit-status))
#+END_SRC

** R settings

#+BEGIN_SRC emacs-lisp
  (use-package ess
    :defer t
    :ensure t
    :bind ("C-c r" . R))
  (autoload 'R-mode "ess-site.el" "" t)
  (add-to-list 'auto-mode-alist '("\\.R\\'" . R-mode))
  (setq inferior-R-args "--no-restore-history --no-save ")
  (setq ess-history-file nil)

  ;; Use the previous behavior (i.e. underscore inserting '<-')
  (use-package ess-r-mode
    :bind
    (:map ess-r-mode-map
          ("_" . ess-insert-assign))
    (:map inferior-ess-r-mode-map
          ("_" . ess-insert-assign)))
#+END_SRC

** Backups
#+BEGIN_SRC emacs-lisp
  (if (file-exists-p "~/.emacs.d/backups")
      nil
    (make-directory "~/.emacs.d/backups"))
  (setq backup-directory-alist '(("." . "~/.emacs.d/backups")))
#+END_SRC

#+BEGIN_SRC emacs-lisp
  (setq delete-old-versions -1)
  (setq version-control t)
  (setq vc-make-backup-files t)
  (setq auto-save-file-name-transforms '((".*" "~/.emacs.d/auto-save-list/" t)))
#+END_SRC

** Column number

#+BEGIN_SRC emacs-lisp
  ;; Show column-number
  (column-number-mode 1)
#+END_SRC

** Org mode

#+BEGIN_SRC emacs-lisp
  (use-package org
    :defer t
    :ensure t)

  (org-babel-do-load-languages
   'org-babel-load-languages
   '((R . t)))
#+END_SRC

*** Default directories

#+BEGIN_SRC emacs-lisp
  (setq org-directory (expand-file-name "~/org"))
  (setq org-default-notes-file (concat org-directory "/notes.org"))
#+END_SRC

*** Key Bindings

#+BEGIN_SRC emacs-lisp
  (bind-key "C-c l" 'org-store-link)
  (bind-key "C-c c" 'org-capture)
  (bind-key "C-c a" 'org-agenda)
  (bind-key "C-c b" 'org-iswitchb)
#+END_SRC

*** Refile

#+BEGIN_SRC emacs-lisp
  (setq org-refile-targets '((org-agenda-files :maxlevel . 3)))
#+END_SRC

** Fullscreen

#+BEGIN_SRC emacs-lisp
  (custom-set-variables
   '(initial-frame-alist (quote ((fullscreen . maximized)))))
#+END_SRC

** Key Bindings

#+BEGIN_SRC emacs-lisp
  (bind-key "C-c s" 'shell)
  (bind-key "C-c e" 'eshell)
  (bind-key "C-c m" 'compile)
  (bind-key (kbd "<M-dead-circumflex>") 'delete-indentation)
#+END_SRC

** C code

#+BEGIN_SRC emacs-lisp
  (setq c-default-style "k&r"
        c-basic-offset 4)
  (setq-default indent-tabs-mode nil)

  (add-hook 'c-mode-common-hook
            (lambda()
              (local-set-key  (kbd "C-c o") 'ff-find-other-file)))
 #+END_SRC

** Password manager
Interface to [[https://www.passwordstore.org/][pass]].

#+BEGIN_SRC emacs-lisp
(use-package helm-pass
  :ensure t
  :commands (helm-pass))
#+END_SRC

** Boomarks

#+BEGIN_SRC emacs-lisp
  (bind-key "<XF86WakeUp>" 'bookmark-jump)
#+END_SRC

** Alarm
#+BEGIN_SRC emacs-lisp
  (setq ring-bell-function 'ignore)
#+END_SRC

** PDF tools
https://github.com/politza/pdf-tools
https://www.youtube.com/watch?v=LFO2UbzbZhA

#+BEGIN_SRC emacs-lisp
  (use-package pdf-tools
    :ensure t
    :config
    (pdf-tools-install))
#+END_SRC

* Org-mode configuration
#+STARTUP: indent
#+STARTUP: hidestars
#+TITLE: Emacs Configuration
#+AUTHOR: Stefan Widgren
#+OPTIONS: toc:4 h:4
